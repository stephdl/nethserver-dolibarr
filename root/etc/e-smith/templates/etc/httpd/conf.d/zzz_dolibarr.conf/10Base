#
# dolibarr WebUI Apache configuration file
#

{

if (($dolibarr{'status'} || 'disabled') eq 'enabled') {
    my $allow = (($dolibarr{'access'} || 'private') eq 'public') ? 'all granted':"ip $localAccess";
    my $domain = $dolibarr{'DomainName'} || '';
    my $cert = $pki{'CrtFile'} || '/etc/pki/tls/certs/NSRV.crt';
    my $key = $pki{'KeyFile'} || '/etc/pki/tls/private/NSRV.key';

    if ( $domain eq '' ) {
        $OUT .= "Alias /dolibarr /usr/share/dolibarr/htdocs\n";
    } elsif ($domain) {

    $OUT .=<<"EOF";

<VirtualHost *:80>
    ServerName $domain
    DocumentRoot  /usr/share/dolibarr
    Redirect permanent / https://$domain/
</VirtualHost>

<VirtualHost *:443>
    ServerName $domain
    RedirectMatch ^/\$ /htdocs
    SSLEngine on
    SSLCertificateFile "$cert"
    SSLCertificateKeyFile "$key"
    DocumentRoot  /usr/share/dolibarr
EOF
    }

    $OUT .=<<"EOF";

<Directory /usr/share/dolibarr>
    SSLRequireSSL on
    <FilesMatch .php\$>
        SetHandler "proxy:unix:/var/run/rh-php73-php-fpm/dolibarr.sock|fcgi://localhost"
    </FilesMatch>
    Options FollowSymLinks
    AllowOverride None

    # Apache 2.4
    <IfModule mod_authz_core.c>
        <IfModule mod_access_compat.c>
            Order deny,allow
        </IfModule>
        Require $allow
    </IfModule>
</Directory>

EOF
    $OUT .= "</VirtualHost>" if ($domain);

} else {

    $OUT .=<<'EOF';

# dolibarr is disabled
# You can enable it with
# db configuration setprop dolibarr status enabled
# signal-event nethserver-dolibarr-update

EOF
}

}
