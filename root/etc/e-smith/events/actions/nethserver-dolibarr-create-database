#!/usr/bin/perl


use strict;
use warnings;
use NethServer::Password;
use esmith::ConfigDB;

my $db = esmith::ConfigDB->open() || die("Can't open db");


my $old_version = $db->get_prop('dolibarr','rpmVersion') || '11.0.3';
$old_version =~ s/\.//g;

my $version = `/usr/bin/rpm -qi dolibarr | awk -F': ' '/Version/ {print \$2}'`;
$version =~ s/\.//g;
chomp $version;

##test if the mysql db is created, if not then the user and the mysql db are created
if ( ! -d '/var/lib/mysql/dolibarr') {
    my $password = NethServer::Password::store('dolibarr') || die('Could not generate dolibarr password!');

    my $commands = join("\n", 
    	      "GRANT ALL PRIVILEGES ON `dolibarr`.* TO 'dolibarr'\@'localhost' IDENTIFIED BY '$password';",
    	      "FLUSH PRIVILEGES;",
    	      "CREATE DATABASE IF NOT EXISTS dolibarr DEFAULT CHARACTER SET = 'utf8';"
         ) . "\n";

    print $commands;

    open(FH, '|-', '/usr/bin/mysql -B -f') || die("[ERROR] Could not connect to mysql");
    print FH $commands;
    close(FH);

    unlink ('/usr/share/dolibarr/documents/install.lock');

    # Install with CURL
    print "#\n# Initial importation of the dolibarr mysql database\n#";
    system('curl -kL -H "Host: 127.0.0.1" -X POST https://127.0.0.1/dolibarr/install/fileconf.php > /dev/null 2>&1'); 
    system('curl -kL -H "Host: 127.0.0.1" -X POST https://127.0.0.1/dolibarr/install/step1.php --data "testpost=ok&action=set&selectlang=en_US" > /dev/null 2>&1');
    system('curl -kL -H "Host: 127.0.0.1" -X POST https://127.0.0.1/dolibarr/install/step2.php --data "testpost=ok&action=set&selectlang=en_US" > /dev/null 2>&1');
    system('curl -kL -H "Host: 127.0.0.1" -X POST https://127.0.0.1/dolibarr/install/step4.php --data "testpost=ok&action=set&selectlang=en_US" > /dev/null 2>&1');
    system('curl -kL -H "Host: 127.0.0.1" -X POST https://127.0.0.1/dolibarr/install/step5.php --data "testpost=ok&action=set&selectlang=en_US&pass=admin&pass_verif=admin" > /dev/null 2>&1');

    system('touch /usr/share/dolibarr/documents/install.lock');

    $version = `/usr/bin/rpm -qi dolibarr | awk -F': ' '/Version/ {print \$2}'`;
    chomp $version;

    $db->set_prop('dolibarr','rpmVersion',$version);
    exit (0);

} elsif ($old_version < $version) {

    # backup , it is a spare wheel 
    mkdir '/var/lib/nethserver/backup_db_dolibarr';
    my ($sec,$min,$hour,$mday,$mon,$year,$wday,$yday,$isdst) = localtime();
    $year = 1900 + $year;
    $mon = 1 + $mon;
    system("/usr/bin/mysqldump dolibarr > /var/lib/nethserver/backup_db_dolibarr/dolibar-$year-$mon-$mday-$hour-$min");
    system('/usr/bin/chmod -R 400 /var/lib/nethserver/backup_db_dolibarr/');

    # find version
    $old_version = $db->get_prop('dolibarr','rpmVersion');
    $version = `/usr/bin/rpm -qi dolibarr | awk -F': ' '/Version/ {print \$2}'`;
    chomp $version;

    # now dolibarr seems to make mysql database fixes between major version eg 12->13
    # think to check https://192.168.12.183/dolibarr/install/index.php
    my $indexversion = substr($version, 0, 2);
    my $indexold_version = substr($old_version, 0, 2);
    chomp $indexversion;
    chomp $indexold_version;

    # remove the upgrade blocker
    unlink ('/usr/share/dolibarr/documents/install.lock');

    # Upgrade with CURL, example below
    # system("curl","-kL","-H",'"Host: 127.0.0.1"',"https://127.0.0.1/dolibarr/install/upgrade.php?action=upgrade&versionfrom=$indexold_version&versionto=$indexversion");
    # system("curl","-kL","-H","'Host: 127.0.0.1'","-X","POST","https://127.0.0.1/dolibarr/install/upgrade2.php?versionfrom=$indexold_version&versionto=$indexversion","--data","testpost=ok&action=upgrade");
    # system("curl","-kL","-H","'Host: 127.0.0.1'","-X","POST","https://127.0.0.1/dolibarr/install/step5.php?versionfrom=$indexold_version&versionto=$indexversion","--data","testpost=ok&action=upgrade");
    # https://ns7dev9/dolibarr/install/upgrade.php?action=upgrade&selectlang=en_US&versionfrom=12.0.0&versionto=13.0.0
    # https://ns7dev9/dolibarr/install/upgrade2.php?versionfrom=12.0.0&versionto=13.0.0
    # https://ns7dev9/dolibarr/install/step5.php?versionfrom=12.0.0&versionto=13.0.0

    if ($indexversion eq '13' && $indexold_version eq '12' ) {
        print "#\n# SQL update of the dolibarr mysql database\n#";
        system('curl -kL -H "Host: 127.0.0.1" "https://127.0.0.1/dolibarr/install/upgrade.php?action=upgrade&versionfrom=12.0.0&versionto=13.0.0"');
        system('curl -kL -H "Host: 127.0.0.1" -X POST "https://127.0.0.1/dolibarr/install/upgrade2.php?versionfrom=12.0.0&versionto=13.0.0" --data "testpost=ok&action=upgrade"');
        system('curl -kL -H "Host: 127.0.0.1" -X POST "https://127.0.0.1/dolibarr/install/step5.php?versionfrom=12.0.0&versionto=13.0.0" --data "testpost=ok&action=upgrade"');
    }

    system('touch /usr/share/dolibarr/documents/install.lock');

    $db->set_prop('dolibarr','rpmVersion',$version);

} else {
    $version = `/usr/bin/rpm -qi dolibarr | awk -F': ' '/Version/ {print \$2}'`;
    chomp $version;
    $db->set_prop('dolibarr','rpmVersion',$version);
}
